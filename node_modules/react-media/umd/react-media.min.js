!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):e.ReactMedia=t(e.React)}(this,function(e){"use strict";function t(e){return function(){return e}}e=e&&e.hasOwnProperty("default")?e.default:e;var n=function(){};n.thatReturns=t,n.thatReturnsFalse=t(!1),n.thatReturnsTrue=t(!0),n.thatReturnsNull=t(null),n.thatReturnsThis=function(){return this},n.thatReturnsArgument=function(e){return e};var r=n;var o,i=function(e,t,n,r,o,i,a,u){if(!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,u],f=0;(s=new Error(t.replace(/%s/g,function(){return c[f++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}},a="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",u=(function(e){e.exports=function(){function e(e,t,n,r,o,u){u!==a&&i(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}()}(o={exports:{}},o.exports),function(e,t,n,r,o,i,a,u){if(!e){var s;if(void 0===t)s=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,u],f=0;(s=new Error(t.replace(/%s/g,function(){return c[f++]}))).name="Invariant Violation"}throw s.framesToPop=1,s}}),s=function(e){return e.replace(/[A-Z]/g,function(e){return"-"+e.toLowerCase()}).toLowerCase()},c=function(e){var t="",n=Object.keys(e);return n.forEach(function(r,o){var i=e[r];r=s(r),/[height|width]$/.test(r)&&"number"==typeof i&&(i+="px"),t+=!0===i?r:!1===i?"not "+r:"("+r+": "+i+")",o<n.length-1&&(t+=" and ")}),t},f=function(e){var t="";return"string"==typeof e?e:e instanceof Array?(e.forEach(function(n,r){t+=c(n),r<e.length-1&&(t+=", ")}),t):c(e)},p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},d=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t},h=function(t){function n(){var e,r;l(this,n);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=r=d(this,t.call.apply(t,[this].concat(i))),r.state={matches:r.props.defaultMatches},r.updateMatches=function(){return r.setState({matches:r.mediaQueryList.matches})},d(r,e)}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(n,t),n.prototype.componentWillMount=function(){if("object"===("undefined"==typeof window?"undefined":p(window))){var e=this.props.targetWindow||window;"function"!=typeof e.matchMedia&&("production"!==process.env.NODE_ENV?u(!1,"<Media targetWindow> does not support `matchMedia`."):u(!1));var t=this.props.query;"string"!=typeof t&&(t=f(t)),this.mediaQueryList=e.matchMedia(t),this.mediaQueryList.addListener(this.updateMatches),this.updateMatches()}},n.prototype.componentWillUnmount=function(){this.mediaQueryList.removeListener(this.updateMatches)},n.prototype.render=function(){var t=this.props,n=t.children,r=t.render,o=this.state.matches;return r?o?r():null:n?"function"==typeof n?n(o):(!Array.isArray(n)||n.length)&&o?e.Children.only(n):null:null},n}(e.Component);return h.defaultProps={defaultMatches:!0},h});
