"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var _regenerator=require("babel-runtime/regenerator"),_regenerator2=_interopRequireDefault(_regenerator),_asyncToGenerator2=require("babel-runtime/helpers/asyncToGenerator"),_asyncToGenerator3=_interopRequireDefault(_asyncToGenerator2),_express=require("express"),_express2=_interopRequireDefault(_express),_projectsModel=require("./projectsModel.js"),_projectsModel2=_interopRequireDefault(_projectsModel),_classModel=require("../Classes/classModel"),_classModel2=_interopRequireDefault(_classModel),_middleWare=require("../MiddleWare/middleWare.js"),_authJWT=require("../MiddleWare/authJWT.js"),_authJWT2=_interopRequireDefault(_authJWT),_BatchRequests=require("../ExternalApis/BatchRequests");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var Router=_express2.default.Router();Router.post("/",function(){var a=(0,_asyncToGenerator3.default)(_regenerator2.default.mark(function a(b,c){var d,e,f,g,h,i,j,k,l;return _regenerator2.default.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return d=b.body,e=d.name,f=d.github,g=d.classID,h=d.trello,a.next=3,(0,_BatchRequests.getBoardID)(h);case 3:i=a.sent,j=i.id,k=i.error,j&&!k?(l=(0,_projectsModel2.default)({name:e,github:f,trelloID:j,trelloURL:h,classID:g}),l.save().then(function(a){_classModel2.default.findByIdAndUpdate(g,{$push:{projects:a._id}}).then(function(a){var b=a.userID;_classModel2.default.find({userID:b}).populate("projects").then(function(a){return c.status(200).json({classes:a})}).catch(function(){return c.send("Error creating project")})}).catch(function(){return c.send("Error creating project")})}).catch(function(){return c.send("Error creating project")})):c.send("Incorrect Trello link");case 7:case"end":return a.stop();}},a,void 0)}));return function(){return a.apply(this,arguments)}}()),Router.put("/:id/:userID",function(a,b){var c=a.params,d=c.id,e=c.userID,f=a.body;_projectsModel2.default.findByIdAndUpdate(d,f,{new:!0}).then(function(){_classModel2.default.find({userID:e}).populate("projects").then(function(a){return b.status(200).json({classes:a})}).catch(function(){return b.send("Error creating project")})}).catch(function(){return b.send("error")})}),Router.get("/:id",function(a,b){var c=a.params.id;ProjectModel.findById(c).populate("class","-_id").populate("students","-_id").then(function(a){b.status(200).json(a)}).catch(function(){b.status(500).json({msg:"we cant display this project "})})}),Router.delete("/:id/:userID",function(a,b){var c=a.params,d=c.id,e=c.userID;_projectsModel2.default.findById(d).remove().then(function(){_classModel2.default.find({userID:e}).populate("projects").then(function(a){return b.status(200).json({classes:a})}).catch(function(){return b.send("Error creating project")})}).catch(function(){b.status(200).json({msg:"... not able to  delete project"})})}),exports.default=Router;