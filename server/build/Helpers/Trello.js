'use strict';var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,'value'in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();Object.defineProperty(exports,'__esModule',{value:!0});function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError('Cannot call a class as a function')}var Trello=function(){function a(b,c,d,e){return _classCallCheck(this,a),this.teamStats=b,this.team=c,this.lists=this.parseLists(e),this.parseCards(d)}return _createClass(a,[{key:'parseLists',value:function g(a){for(var b={members:this.team},c=a.length-1;0<=c;c--){var d=a[c],e=d.id,f=d.name;!1==f in b&&(b[f]={id:e,cards:[]})}return b}},{key:'loopLists',value:function d(a){var b=!1;for(var e in this.lists)if(this.lists.hasOwnProperty(e)){var c=this.lists[e].id;if(c===a){b=e;break}}return b}},{key:'loopTeam',value:function h(a){for(var b=a.length,c=0,d=this.team.length-1;0<=d;d--){var e=this.team[d],f=e.id,g=e.fullName;if(a.includes(f)&&(c++,g in this.teamStats&&(this.teamStats[g].trellos+=1),c===b))break}}},{key:'parseCards',value:function o(a){for(var b=0,c=0,d=0,e=a.length-1;0<=e;e--){var f=a[e],g=f.idList,h=f.idMembers,j=f.name,k=this.loopLists(g);k&&(this.lists[k].cards.push({name:j,idMembers:h}),'Done'===k?(d++,this.loopTeam(h)):'In Progress'===k||'Testing'===k?c++:'To Do'===k&&b++)}var l=d+c+b,m=100*(d/l),n=Math.PI*(2*(200-200*m/100));return{updatedTeamStats:this.rebuildTeamObject(),totalCards:l,inProgress:this.getInProgress(),trello:this.lists,completeness:n}}},{key:'rebuildTeamObject',value:function b(){var a=[];for(var c in this.teamStats){var d={};d.name=c,d.github=this.teamStats[c].github,d.merges=this.teamStats[c].merges,d.trellos=this.teamStats[c].trellos,a.push(d)}return a}},{key:'getInProgress',value:function a(){return'In Progress'in this.lists&&'Testing'in this.lists?[].concat(_toConsumableArray(this.lists['In Progress'].cards),_toConsumableArray(this.lists.Testing.cards)):[]}}]),a}();exports.default=Trello;